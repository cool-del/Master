apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'packer'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'io.fabric'
android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.master.kit"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 10000
        versionName "1.0.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        //生成ARouter文档
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

    }
    compileOptions {
        sourceCompatibility versions.java
        targetCompatibility versions.java
    }
    packagingOptions {
        // More than one file was found with OS independent path 'lib/armeabi-v7a/libgnustl_shared.so'
        pickFirst 'lib/armeabi-v7a/libgnustl_shared.so'
        pickFirst 'lib/x86/libgnustl_shared.so'

    }
    signingConfigs {
        config {
            storeFile file('master.jks')
            keyAlias 'master'
            keyPassword 'master965661686'
            storePassword '965661686'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

//packer-begin
packer {
    archiveNameFormat = '${appPkg}-${buildType}-v${versionName}-${channel}'
    archiveOutput = new File(project.rootProject.buildDir, "apks")
    channelList = ['*Douban*', 'Google/', '中文/@#市场']
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.constraintLayout
    testImplementation 'junit:junit:4.12'
    if (!MoudleDebug) {
        api project(':widget')
        api project(':applet')
        api project(':debug')
        api project(':source')
        api project(':other')
        api project(':sign')
        api project(':rn')
    }
    api project(':service')
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:$versions.tinker") {
        changing = true
    }
    compileOnly("com.tinkerpatch.tinker:tinker-android-anno:$versions.tinker") { changing = true }
    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:$versions.tinkerpatch") {
        changing = true
    }
    implementation 'com.github.ooftf:JsBridge-TencentX5:1.2.0'
    kapt "com.alibaba:arouter-compiler:$versions.arouter"
    kapt "com.jakewharton:butterknife-compiler:$versions.butterknife"
    def htextview_version = '0.1.6'
    implementation "com.hanks:htextview-base:$htextview_version"
    implementation "com.hanks:htextview-typer:$htextview_version"// optional
    kapt deps.dagger2_compiler
    //Firebase
    api 'com.google.firebase:firebase-core:16.0.4'
}
apply plugin: 'com.jakewharton.hugo'
apply from: 'tinkerpatch.gradle'
//Firebase
apply plugin: 'com.google.gms.google-services'